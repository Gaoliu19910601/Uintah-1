
#include <config/sci.cf>

#ifdef SCI_MACHINE_Linux
TEMPLATE_OBJS = templates.o
TEMPLATE_SRCS = templates.cc
#endif

#if defined(SCI_MACHINE_Solaris)
XLIBDIR = -L/usr/openwin/lib
XINCLUDE = -I/usr/openwin/include
#endif

#if defined(SCI_MACHINE_Linux)
XLIBDIR = -L/usr/X11R6/lib
#endif

#ifdef SCI_MESA
OPENGLINCS = -I$(TOP)/Mesa/include 
OPENGLLIBS = -L$(TOP)/Mesa/lib -lMesaGLU -lMesaGL -lXext -lX11
#else
OPENGLINCS = 
OPENGLLIBS = $(XLIBDIR) -lGLU -lGL -lXext -lX11
#endif

#ifndef SCI_OPENGL
OPENGLOBJS =
OPENGLSRCS = 
#endif

#ifdef SCI_VOLPACK
VOLPACK_OBJS = BB.o  RenderRG.o
VOLPACK_SRCS = BB.cc RenderRG.cc
#endif

OBJS = AddWells.o AddWells2.o BitVisualize.o BoxClipSField.o \
	BoundGrid.o Bundles.o ColorMapKey.o \
	CuttingPlane.o CuttingPlaneTex.o \
	FastRender.c  FieldCage.o \
	GenAxes.o GenColorMap.o GenFieldEdges.o GenStandardColorMaps.o \
	GenTransferFunc.o  Hedgehog.o  \
	ImageViewer.o IsoMask.o IsoSurface.o \
	IsoSurfaceDW.o IsoSurfaceMRSG.o IsoSurfaceSP.o \
	OctIsoSurface.o RescaleColorMap.o \
	RescaleParticleColorMap.o SimpVolVis.o Streamline.o Ted.o \
	VectorSeg.o VolVis.o VolRendTexSlices.o WidgetTest.o \
	$(TEMPLATE_OBJS)

SRCS = AddWells.cc AddWells2.cc BitVisualize.cc BoxClipSField.cc \
	BoundGrid.cc Bundles.cc ColorMapKey.cc \
	CuttingPlane.cc CuttingPlaneTex.cc \
	FastRender.c  FieldCage.cc \
	GenAxes.cc GenColorMap.cc GenFieldEdges.cc GenStandardColorMaps.cc \
	GenTransferFunc.cc  Hedgehog.cc \
	ImageViewer.cc IsoMask.cc IsoSurface.cc \
	IsoSurfaceDW.cc IsoSurfaceMRSG.cc IsoSurfaceSP.cc \
	OctIsoSurface.cc RescaleColorMap.cc \
	RescaleParticleColorMap.cc SimpVolVis.cc Streamline.cc Ted.cc \
	VectorSeg.cc VolVis.cc VolRendTexSlices.cc WidgetTest.cc \
	$(TEMPLATE_SRCS)

LIBNAME = Visualization

LOCALINCLUDES = $(OPENGLINCS)

SO_LIBS =
SO_LDFLAGS = -L$(TOP)/lib -lSalmon -lWidgets -lDatatypes -lDataflow -lGeom -lGeometry \
	-lTCL -lscitk TK_LIB TCL_LIB -lClasslib -lMultitask  $(OPENGLLIBS) \
	-lMalloc -lm SCI_CCLibs

SCIDependTarget($(SRCS))
SCIObjLibraryTarget($(LIBNAME),$(OBJS),$(SO_LIBS),$(SO_LDFLAGS))

#ifdef SCI_MACHINE_SGI
#ifdef SCI_IRIX_BIN_o32
OPTLEVEL = -O2
#else
OPTLEVEL = -O3 -OPT:roundoff=3:div_split=ON:alias=typed:fast_exp=ON
#endif
OPTFLAGS = SCI_BinFlags -I$(TOP) $(OPTLEVEL)  -fullwarn
#else
OPTFLAGS = $(CFLAGS)
#endif

SUPEROPTFLAGS = 
FastRender.o: FastRender.c
	$(CC) $(OPTFLAGS) -c FastRender.c

