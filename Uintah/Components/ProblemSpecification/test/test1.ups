// These are constants that might get used later.  Especially helpful
// in a multi-region code to have a single place to change a bunch of
// parameters

variable xres = 10;
variable yres = 74;
variable zres = 1;

Meta {
   // "meta-data" - mostly to go into the database for posterity
   title = "test run";
}
//__________________________________
//  Time Related
//___________________________________
Time {
    // Time stepping parameters
    maximumTime         = 15.0;
    initialTime         = 0.0;
    delt_min            = 0.0;
    delt_max            = 1.0;
}

//__________________________________
//  Output Related
//  Time variables
//   t_initial_output = starting time for file and debugging output
//   t_final_outpu    = ending time for file and debugging output 
//   t_delta_output   = delta time between output
//                    = 0 output every timestep    
//___________________________________*/
OutputVars {
    t_initial_output    = 0.0;
    t_final_output      = 15;
    t_delta_output      = 0;
    filebasename        = "run1";
    file_description    = " I hope this runs";
}

//__________________________________
//  CFD specific
//__________________________________
CFD {
    /* Solution parameters */
    CFL	                = 0.5;
}


//__________________________________
//  ICE specific
//___________________________________
ICE {
    /* Solution parameters */
    CFL                 = 0.5;   
}


//__________________________________
//  ARCHES specific
//___________________________________
ARCHES {
    /* Solution parameters */
    CFL                 = 0.5;   
}


//__________________________________
//  Physical constants
//___________________________________
PhysicalConstants {
    /* Problem-wide physical properties.  */
    gravity             = [0,0,0];
    ideal_gas_constant  = 1.0;
}

// In general, material properties will be broken down for specific
// algorithms such as ARCHES, ICE, and MPM.


//__________________________________
//  ICE Material properties
//___________________________________
ICEMaterialProperties m1 {
    /* m1 is a name that can be used later to refer to this material */
    viscosity           = 1.0;
    thermal_conductivity = 1.0;
    specific_heat       = 1.0;
    speed_of_sound      = 1.0;
}

//__________________________________
//  ARCHES Material properties
//___________________________________
ARCHESMaterialProperties m2 {
    /* m2 is a name that can be used later to refer to this material */
    viscosity           = 1.0;
    thermal_conductivity = 1.0;
    specific_heat       = 1.0;
    speed_of_sound      = 1.0;
}

//________________________________________________
//  MPM Material properties and Constitutive Model 
//_______________________________________________

MPMMaterialProperties m3 {
    /* m3 is a name that can be used later to refer to this material */
    density           = 1.0;
    material_type     = "Elastic";
    youngs_modulus    = 1.e5;
    poissons_ratio    = .33;
}

MPMMaterialProperties m4 {
    /* m4 is a name that can be used later to refer to this material */
    density           = 1.0;
    material_type     = "CompMooneyRivlin";
    he_constant_1     = 1.e5;
    he_constant_2     =	2.e4;
    he_constant_3     =	7.e4;
    he_constant_4     = 1.32e6;
     GeometryPiece gp4 {
	type = "tri";
	file = "crack.dat";
	res = [2, 2, 2];
    }
}


MPMMaterialProperties m5 {
    /* m5 is a name that can be used later to refer to this material */
    density           = 1.0;
    material_type     = "CompNeoHook";
    bulk_modulus      =	4.e4;
    shear_modulus     =	3.8e3;	
    GeometryPiece gp3 {
	type = "sphere";
     	origin = [.75,.75,.75];
	rad = .75;
	res = [2, 2, 2];
    }
}

MPMMaterialProperties m6 {
    /* m6 is a name that can be used later to refer to this material */
    density           = 1.0;
    material_type     = "CompNeoHookPlast";
    bulk_modulus      = 164206000;
    shear_modulus     =	80193800;	
    yield_stress      = 45e4;
    hardening_modulus = 129240;
}
	

MPMMaterialProperties m7 {
    /* m7 is a name that can be used later to refer to this material */
    density           = 1.0;
    material_type     = "HyperElasticDamage";
    bulk_modulus      = 8100000000.0;
    shear_modulus     = 2700000000.0;
    alpha	      = 0.1;
    beta	      = 0.3;
    max_equiv_strain  = 0.001;
    GeometryPiece gp2 {
	type = "cylinder";
	axis = "X";
	origin = [.75,.75,.75];
	len = 2;
	rad = .75;
	res = [2, 2, 2];	
    }
    object = gp2;
}
    
MPMMaterialProperties m8 {
    /* m7 is a name that can be used later to refer to this material */
    density           = 1.0;
    material_type     = "ViscoElasticDamage";
    bulk_modulus      = 8100000000.0;
    shear_modulus     = 2700000000.0;
    alpha	      = 0.1;
    beta	      = 0.3;
    tau		      = 0.82;
    gamma	      = 0.75;
    max_equiv_strain  = 0.001;
    GeometryPiece gp1 {
	type = "box";
	min = [.25,.25,.25];
	max = [.75,.75,.75];
	res = [2, 2, 2];
    }
    GeometryPiece gp1hole {
	type = "box";
	min = [.45,.45,.45];
	max = [.55,.55,.55];
	res = [2, 2, 2];
    }
    object = gp1 - gp1hole;
}


//__________________________________
//  Grid
//___________________________________*/
Grid {
    Region r1 {
	min = [0,0,0];
	max = [1,1,1];
	res = [xres, yres, zres];
	Specific ICE {
	    // Ice-specific parameters for this region
	}
    }
}

//__________________________________
//  Physical Boundary Conditions
//
//  This is a little misleading
//  The values specified can either be
//  the dirichlet or neumann depending on 
//  the type of boundary condition.
//___________________________________*/


// Boundary condition types can be:
//  Matched
//    requires a face/region to match
//  Symmetry
//  Physical
//    - Dirichlet/Neumann
//    - Fixed/Floating
//  Abutted regions are assumed to be matched
// 
PhysicalBC[TOP][r1][m1] {
    type        = "inflow";
    velocity    = [1.0, 1.0, -9];
    pressure    = 1.0;
    temperature = 1.0;
    density     = 1.0;
}
PhysicalBC[LEFT][r1][m1] {
    type        = "inflow";
    velocity    = [1.0, 1.0, 0];
    pressure    = 1.0;
    temperature = 1.0;
    density     = 1.0;
}
PhysicalBC[RIGHT][r1][m1] {
    type        = "inflow";
    velocity    = [1.0, 1.0, -9];
    pressure    = 1.0;
    temperature = 1.0;
    density     = 1.0;
}
PhysicalBC[FRONT,BACK][r1][m1] {
    type        = "none";
    velocity    = [1.0, 1.0, -9];
    pressure    = 1.0;
    temperature = 1.0;
    density     = 1.0;
}

//__________________________________
// Boundary Conditions for Particles
//__________________________________

PhysicalBC[FRONT,BACK][go1][gp1] {
    type        = "none";
    velocity    = [1.0, 1.0, -9];
   
}

PhysicalBC[TOP,BOTTOM][go1][gp2] {
    type        = "none";
    force    = [1.0, 1.0, -9];
   
}


//__________________________________
//  Primitive Variables initial conditions
//  for all materials
//___________________________________*/
InitialConditions[*][*] {
    initial_pressure    = 1.0;
    velocity            = [1,1,0];
    density             = 1.0;
    temperature         = 1.0;
}
