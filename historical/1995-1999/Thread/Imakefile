
#include <config/sci.cf>

#ifdef SCI_MACHINE_SGI
#define THREAD_IMPLEMENTATION_O  Thread_irix.o
#define THREAD_IMPLEMENTATION_CC Thread_irix.cc
#endif

LOCALCCFLAGS = -LANG:ansi-for-init-scope=ON 

OBJS = AsyncReply.o Parallel.o Thread.o AtomicCounter.o \
	ParallelBase.o ThreadAlert.o Barrier.o PoolMutex.o \
	ThreadError.o ConditionVariable.o Profiler.o \
	ThreadEvent.o CrowdMonitor.o RealtimeThread.o ThreadGroup.o \
	LockUnlock.o RecursiveMutex.o ThreadListener.o Mailbox.o \
	Reducer.o ThreadTopology.o Runnable.o WorkQueue.o Mutex.o \
	Semaphore.o THREAD_IMPLEMENTATION_O tests.o TestThreads.o
SRCS = AsyncReply.cc Parallel.cc Thread.cc AtomicCounter.cc \
	ParallelBase.cc ThreadAlert.cc Barrier.cc PoolMutex.cc \
	ThreadError.cc ConditionVariable.cc Profiler.cc \
	ThreadEvent.cc CrowdMonitor.cc RealtimeThread.cc ThreadGroup.cc \
	LockUnlock.cc RecursiveMutex.cc ThreadListener.cc Mailbox.cc \
	Reducer.cc ThreadTopology.cc Runnable.cc WorkQueue.cc Mutex.cc \
	Semaphore.cc THREAD_IMPLEMENTATION_CC tests.cc TestThreads.cc

LIBNAME = Thread

SCI_CLIBS = SCI_CCLibs
SO_LIBS = 
SO_LDFLAGS = -L$(TOP)/lib -lTester -lMalloc -lelf -lfetchop

SCIDependTarget($(SRCS))
SCIObjLibraryTarget($(LIBNAME),$(OBJS),$(SO_LIBS), $(SO_LDFLAGS))
