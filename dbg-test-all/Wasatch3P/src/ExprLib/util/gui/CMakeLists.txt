#--------------------------------------------------------------------------------
# This sets the windows build that will need the special winmain@16 call. Qt provides
#  this for us in the qtmain.lib file. Using this cmake code will ensure we have it
#  linked into our build. Not needed on Unix/OS X/Linux which is why we have the 
#  IF(WIN32) conditional.
IF (WIN32)
    SET (QT_USE_QTMAIN TRUE)
ENDIF (WIN32)

option( BUILD_GUI "Triggers build of expression creation GUI if Qt4 is found" OFF )

if( ${CMAKE_VERSION} VERSION_LESS 2.8.7 )
  set( BUILD_GUI OFF FORCE )
  message( WARNING "Disabling GUI build because the CMake version is too old (>2.8.7 required)" )
endif()


if( BUILD_GUI )
  find_package( Qt4 COMPONENTS QtCore QtGui )
endif()

if( QT4_FOUND AND BUILD_GUI )

  include( ${QT_USE_FILE} )

  set( util_src
    ../CreateExpr.cpp
    ${CMAKE_SOURCE_DIR}/expression/Context.cpp
    ${CMAKE_SOURCE_DIR}/expression/Tag.cpp
    )

  set( gui_headers
    EntryList.h
    Highlighter.h
    exprnamedialog.h
    mainwindow.h
    vartable.h
    )

  set( gui_src
    EntryList.cpp
    Highlighter.cpp
    exprnamedialog.cpp
    main.cpp
    mainwindow.cpp
    vartable.cpp
    )

  set( gui_forms 
    EntryList.ui
    exprnamedialog.ui
    mainwindow.ui
    vartable.ui
    )

  set( gui_resources
    icons.qrc
    )

  qt4_wrap_cpp     ( gui_headers_moc   ${gui_headers}   )
  qt4_wrap_ui      ( gui_forms_headers ${gui_forms}     )
  qt4_add_resources( gui_resources_rcc ${gui_resources} )
  
  add_definitions( ${QT_DEFINITIONS} )

  # pick up files generated by qt4
  include_directories( ${CMAKE_CURRENT_BINARY_DIR} )

  set( plugin_dest_dir bin )
  set( qtconf_dest_dir bin )
  set( appName "CreateExpr_${MAJOR_VERSION}.${MINOR_VERSION}-${PATCH_VERSION}" )
  set( APPS "\${CMAKE_INSTALL_PREFIX}/bin/${appName}" )
  
  if( APPLE )
    set(GUI_TYPE MACOSX_BUNDLE)
    set( app_postfix ".app" )
    set( plugin_dest_dir bin/${appName}${app_postfix}/Contents/MacOS)
    set( qtconf_dest_dir bin/${appName}${app_postfix}/Contents/Resources)
    # set the app icon
    set( MACOSX_BUNDLE_ICON_FILE appIcon.icns )
    set_source_files_properties( ${CMAKE_CURRENT_SOURCE_DIR}/images/appIcon.icns PROPERTIES MACOSX_PACKAGE_LOCATION Resources )
    set( gui_src ${gui_src} ${CMAKE_CURRENT_SOURCE_DIR}/images/appIcon.icns )
    set( CPACK_GENERATOR "DragNDrop" )
    set( CPACK_DMG_VOLUME_NAME "${PROJECT_NAME}" )
    set( CPACK_SYSTEM_NAME "OSX" )
    set( CPACK_BINARY_DRAGNDROP ON )
  elseif( WIN32 )
    set(GUI_TYPE WIN32)
    set( app_postfix ".exe" )
  endif()

  add_executable( ${appName} ${GUI_TYPE}
    ${util_src}
    ${gui_src}
    ${gui_headers}
    ${gui_headers_moc}
    ${gui_forms_headers}
    ${gui_resources_rcc}
    )
  
  target_link_libraries( ${appName} ${QT_LIBRARIES} )
  
  install( TARGETS ${appName} COMPONENT Runtime DESTINATION "bin" )

  include( InstallRequiredSystemLibraries )
  
  if( APPLE OR WIN32 )
    include( DeployQt4 )  # requires cmake 2.8.7 or later
    install_qt4_executable( "bin/${appName}${app_postfix}"
                            "${QT_QICO_PLUGIN_RELEASE};${QT_QTIFF_PLUGIN_RELEASE}"
                          )
  endif()

else()

  message( STATUS "GUI will not be built " ${CMAKE_VERSION} )

endif( QT4_FOUND AND BUILD_GUI )