/*
 * Copyright (c) 2014 The University of Utah
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to
 * deal in the Software without restriction, including without limitation the
 * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or
 * sell copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
 * IN THE SOFTWARE.
 */

#ifndef GAUSS_KRONROD_PTS_H
#define GAUSS_KRONROD_PTS_H

// here is a template.  Fill these in as appropriate...
/*
#ifdef METHOD
static const int nGauss        = ;
static const int nGaussKronrod = ;  // must be nGauss*2 +1
static const double gaussKronrodPoint[nGaussKronrod] = {
};
static const double gaussKronrodWeight[nGaussKronrod] = {
};
static const double gaussPoint[nGauss] = {
};
static const double gaussWeight[nGauss] = {
};
#endif
*/

//====================================================================
//====================================================================

#ifdef JACOBI_7
/**
 *  Jacobi weight function with a=b=0.
 *  3 gauss points; 7 Gauss-Kronrod points.
 */
static const int nGauss        = 3;
static const int nGaussKronrod = 7;  // must be nGauss*2 +1
static const double gaussKronrodPoint[nGaussKronrod] = {
  -0.96049126870802,
  -0.77459666924148,
  -0.43424374934680,
  -0.00000000000000,
   0.43424374934680,
   0.77459666924148,
   0.96049126870802
};
static const double gaussKronrodWeight[nGaussKronrod] = {
  0.10465622602647,
  0.26848808986833,
  0.40139741477596,
  0.45091653865847,
  0.40139741477596,
  0.26848808986833,
  0.10465622602647
};
static const double gaussPoint[nGauss] = {
  -0.77459666924148,
  -0.00000000000000,
   0.77459666924148
};
static const double gaussWeight[nGauss] = {
  0.55555555555556,
  0.88888888888889,
  0.55555555555556
};
#endif // JACOBI_7

//====================================================================
//====================================================================

#ifdef JACOBI_11
/**
 *  Jacobi weight function with a=b=0.
 *  5 gauss points; 11 Gauss-Kronrod points.
 */
static const int nGauss        =  5;
static const int nGaussKronrod = 11;  // must be nGauss*2 +1
static const double gaussKronrodPoint[nGaussKronrod] = {
  -0.98408536009484,  -0.90617984593866,  -0.75416672657085,
  -0.53846931010568,  -0.27963041316178,
  -0.00000000000000,
   0.27963041316178,   0.53846931010568,   0.75416672657085,
   0.90617984593866,   0.98408536009484
};
static const double gaussKronrodWeight[nGaussKronrod] = {
  0.04258203675108,  0.11523331662247,  0.18680079655649,
  0.24104033922865,  0.27284980191256,
  0.28298741785749,
  0.27284980191256,  0.24104033922865,  0.18680079655649,
  0.11523331662247,  0.04258203675108
};
static const double gaussPoint[nGauss] = {
  -0.90617984593866,  -0.53846931010568,
   0.00000000000000,
   0.53846931010568,   0.90617984593866
};
static const double gaussWeight[nGauss] = {
  0.23692688505619,  0.47862867049937,
  0.56888888888889,
  0.47862867049937,  0.23692688505619
};
#endif  // JACOBI_11

//====================================================================
//====================================================================

#ifdef JACOBI_21
/**
 *  Jacobi weight function with a=b=0.
 *  10 gauss points; 21 Gauss-Kronrod points.
 */
static const int nGauss        = 10;
static const int nGaussKronrod = 21;  // must be nGauss*2 +1
static const double gaussKronrodPoint[nGaussKronrod] = {
  -0.99565716302581,  -0.97390652851717,  -0.93015749135571,  -0.86506336668898,
  -0.78081772658642,  -0.67940956829902,  -0.56275713466860,  -0.43339539412925,
  -0.29439286270146,  -0.14887433898163,
   0.00000000000000,
   0.14887433898163,   0.29439286270146,   0.43339539412925,   0.56275713466860,
   0.67940956829902,   0.78081772658642,   0.86506336668898,   0.93015749135571,
   0.97390652851717,   0.99565716302581
};
static const double gaussKronrodWeight[nGaussKronrod] = {
  0.01169463886737,
  0.03255816230797,
  0.05475589657435,
  0.07503967481092,
  0.09312545458370,
  0.10938715880230,
  0.12349197626207,
  0.13470921731147,
  0.14277593857706,
  0.14773910490134,
  0.14944555400292,
  0.14773910490134,
  0.14277593857706,
  0.13470921731147,
  0.12349197626207,
  0.10938715880230,
  0.09312545458370,
  0.07503967481092,
  0.05475589657435,
  0.03255816230797,
  0.01169463886737
};
static const double gaussPoint[nGauss] = {
  -0.97390652851717,
  -0.86506336668898,
  -0.67940956829902,
  -0.43339539412925,
  -0.14887433898163,
   0.14887433898163,
   0.43339539412925,
   0.67940956829902,
   0.86506336668898,
   0.97390652851717
};
static const double gaussWeight[nGauss] = {
  0.06667134430869,
  0.14945134915058,
  0.21908636251598,
  0.26926671931000,
  0.29552422471475,
  0.29552422471475,
  0.26926671931000,
  0.21908636251598,
  0.14945134915058,
  0.06667134430869
};
#endif // JACOBI_21

//====================================================================
//====================================================================

#ifdef DQAGP_21
/**
 *  Weights used in NETLIB's DQAGP
 *  10 gauss points.
 *  Unknown weight function.
 */
static const int nGauss        = 10;
static const int nGaussKronrod = 21;
static const double gaussKronrodPoint[nGaussKronrod] = {
  -0.9956571630258,  -0.9739065285171,  -0.9301574913557,  -0.8650633666889,
  -0.7808177265864,  -0.6794095682990,  -0.5627571346686,  -0.4333953941292,
  -0.2943928627014,  -0.1488743389816,
   0.0000000000000,
   0.1488743389816,   0.2943928627014,   0.4333953941292,   0.5627571346686,
   0.6794095682990,   0.7808177265864,   0.8650633666889,   0.9301574913557,
   0.9739065285171,   0.9956571630258
};
static const double gaussKronrodWeight[nGaussKronrod] = {
  0.0116946388673,  0.0325581623079,  0.0547558965743,  0.0750396748109,
  0.0931254545836,  0.1093871588022,  0.1234919762620,  0.1347092173114,
  0.1427759385770,  0.1477391049013,
  0.1494455540029,
  0.1477391049013,  0.1427759385770,  0.1347092173114,  0.1234919762620,
  0.1093871588022,  0.0931254545836,  0.0750396748109,  0.0547558965743,
  0.0325581623079,  0.0116946388673
};
static const double gaussPoint[nGauss] = {
  -0.9739065285171,  -0.8650633666889,  -0.6794095682990,
  -0.4333953941292,  -0.1488743389816,
   0.1488743389816,   0.4333953941292,   0.6794095682990,
   0.8650633666889,   0.9739065285171
};
static const double gaussWeight[nGauss] = {
  0.0666713443086,  0.1494513491505,  0.2190863625159,
  0.2692667193099,  0.2955242247147,
  0.2955242247147,  0.2692667193099,  0.2190863625159,
  0.1494513491505,  0.0666713443086
};
#endif //DQAGP_21

//====================================================================
//====================================================================

#ifdef JACOBI_41
static const int nGauss        = 20;
static const int nGaussKronrod = 41;  // must be nGauss*2 +1
static const double gaussKronrodPoint[nGaussKronrod] = {
  -0.99885903158828, -0.99312859918509, -0.98150787745025, -0.96397192727791,
  -0.94082263383175, -0.91223442825133, -0.87827681125228, -0.83911697182222,
  -0.79504142883755, -0.74633190646015, -0.69323765633475, -0.63605368072652,
  -0.57514044681971, -0.51086700195083, -0.44359317523872, -0.37370608871542,
  -0.30162786811491, -0.22778585114165, -0.15260546524092, -0.07652652113350,
  -0.00000000000000,
   0.07652652113350,  0.15260546524092,  0.22778585114165,  0.30162786811491,
   0.37370608871542,  0.44359317523872,  0.51086700195083,  0.57514044681971,
   0.63605368072652,  0.69323765633475,  0.74633190646015,  0.79504142883755,
   0.83911697182222,  0.87827681125228,  0.91223442825133,  0.94082263383175,
   0.96397192727791,  0.98150787745025,  0.99312859918509,  0.99885903158828
};
static const double gaussKronrodWeight[nGaussKronrod] = {
  0.00307358371852,  0.00860026985564,  0.01462616925697,  0.02038837346127,
  0.02588213360495,  0.03128730677703,  0.03660016975820,  0.04166887332797,
  0.04643482186750,  0.05094457392373,  0.05519510534829,  0.05911140088064,
  0.06265323755478,  0.06583459713362,  0.06864867292852,  0.07105442355344,
  0.07303069033279,  0.07458287540050,  0.07570449768456,  0.07637786767208,
  0.07660071191800,
  0.07637786767208,  0.07570449768456,  0.07458287540050,  0.07303069033279,
  0.07105442355344,  0.06864867292852,  0.06583459713362,  0.06265323755478,
  0.05911140088064,  0.05519510534829,  0.05094457392373,  0.04643482186750,
  0.04166887332797,  0.03660016975820,  0.03128730677703,  0.02588213360495,
  0.02038837346127,  0.01462616925697,  0.00860026985564,  0.00307358371852
};
static const double gaussPoint[nGauss] = {
  -0.99312859918509, -0.96397192727791, -0.91223442825133, -0.83911697182222,
  -0.74633190646015, -0.63605368072652, -0.51086700195083, -0.37370608871542,
  -0.22778585114165, -0.07652652113350,
   0.07652652113350,  0.22778585114165,  0.37370608871542,  0.51086700195083,
   0.63605368072652,  0.74633190646015,  0.83911697182222,  0.91223442825133,
   0.96397192727791,  0.99312859918509
};
static const double gaussWeight[nGauss] = {
  0.01761400713915,  0.04060142980039,  0.06267204833411,  0.08327674157670,
  0.10193011981724,  0.11819453196152,  0.13168863844918,  0.14209610931838,
  0.14917298647260,  0.15275338713073,
  0.15275338713073,  0.14917298647260,  0.14209610931838,  0.13168863844918,
  0.11819453196152,  0.10193011981724,  0.08327674157670,  0.06267204833411,
  0.04060142980039,  0.01761400713915
};
#endif // JACOBI_41

//==============================================================================

#ifdef JACOBI_121
static const int nGauss        = 60;
static const int nGaussKronrod = 121;  // must be nGauss*2 +1
static const double gaussKronrodPoint[nGaussKronrod] = {
  -0.99986894039735,  -0.99921012322744,  -0.99787067797281,  -0.99584052511884,
  -0.99314406509021,  -0.98978789522222,  -0.98576273403417,  -0.98106720175260,
  -0.97571130869063,  -0.96970178876505,  -0.96303809044100,  -0.95572225584000,
  -0.94776254337082,  -0.93916627611642,  -0.92993671378354,  -0.92007847617763,
  -0.90960021010203,  -0.89851031081005,  -0.88681462876696,  -0.87451992264690,
  -0.86163582612713,  -0.84817198478593,  -0.83413634063502,  -0.81953752616215,
  -0.80438634842168,  -0.78869373993226,  -0.77246944634326,  -0.75572377530659,
  -0.73846873678927,  -0.72071651335573,  -0.70247844071278,  -0.68376632738136,
  -0.66459333948892,  -0.64497282848948,  -0.62491753372828,  -0.60444059704851,
  -0.58355624965568,  -0.56227890075394,  -0.54062251531844,  -0.51860140005857,
  -0.49623073093172,  -0.47352584176171,  -0.45050174562864,  -0.42717374158308,
  -0.40355780908279,  -0.37967005657680,  -0.35552636501293,  -0.33114284826845,
  -0.30653613242385,  -0.28172293742326,  -0.25671982824254,  -0.23154355137603,
  -0.20621121086088,  -0.18073996487343,  -0.15514687531462,  -0.12944913539695,
  -0.10366414973806,  -0.07780933394954,  -0.05190205753880,  -0.02595977230125,
  -0.00000000000000,
  0.02595977230125,   0.05190205753880,   0.07780933394954,   0.10366414973806,
  0.12944913539695,   0.15514687531462,   0.18073996487343,   0.20621121086088,
  0.23154355137603,   0.25671982824254,   0.28172293742326,   0.30653613242385,
  0.33114284826845,   0.35552636501293,   0.37967005657680,   0.40355780908279,
  0.42717374158308,   0.45050174562864,   0.47352584176171,   0.49623073093172,
  0.51860140005857,   0.54062251531844,   0.56227890075394,   0.58355624965568,
  0.60444059704851,   0.62491753372828,   0.64497282848948,   0.66459333948892,
  0.68376632738136,   0.70247844071278,   0.72071651335573,   0.73846873678927,
  0.75572377530659,   0.77246944634326,   0.78869373993226,   0.80438634842168,
  0.81953752616215,   0.83413634063502,   0.84817198478593,   0.86163582612713,
  0.87451992264690,   0.88681462876696,   0.89851031081005,   0.90960021010203,
  0.92007847617763,   0.92993671378354,   0.93916627611642,   0.94776254337082,
  0.95572225584000,   0.96303809044100,   0.96970178876505,   0.97571130869063,
  0.98106720175260,   0.98576273403417,   0.98978789522222,   0.99314406509021,
  0.99584052511884,   0.99787067797281,   0.99921012322744,   0.99986894039735
};
static const double gaussKronrodWeight[nGaussKronrod] = {
  0.00035309352009,  0.00098957111595,  0.00168881658670,  0.00236661114697,
  0.00302530527821,  0.00368912213436,  0.00436146638925,  0.00502758855697,
  0.00568300310799,  0.00633636534216,  0.00699076245664,  0.00763935787810,
  0.00827878115797,  0.00891334185215,  0.00954507013555,  0.01016985984860,
  0.01078522284204,  0.01139368492942,  0.01199659638648,  0.01259114041876,
  0.01317540660371,  0.01375101092308,  0.01431887215443,  0.01487690562344,
  0.01542359803641,  0.01596003744934,  0.01648685780200,  0.01700244529576,
  0.01750557806830,  0.01799701182837,  0.01847718567886,  0.01894481804101,
  0.01939891427005,  0.01984000938527,  0.02026840565003,  0.02068307361793,
  0.02108320540912,  0.02146918421658,  0.02184121436913,  0.02219846947127,
  0.02254030223805,  0.02286698888784,  0.02317866262412,  0.02347466875931,
  0.02375450343652,  0.02401836617317,  0.02426633771149,  0.02449791452590,
  0.02471272496710,  0.02491091263261,  0.02509251862664,  0.02525717697351,
  0.02540464114326,  0.02553501298607,  0.02564830231131,  0.02574427177483,
  0.02582279593615,  0.02588394414600,  0.02592769956371,  0.02595394793411,
  0.02596268333964,
  0.02595394793411,  0.02592769956371,  0.02588394414600,  0.02582279593615,
  0.02574427177483,  0.02564830231131,  0.02553501298607,  0.02540464114326,
  0.02525717697351,  0.02509251862664,  0.02491091263261,  0.02471272496710,
  0.02449791452590,  0.02426633771149,  0.02401836617317,  0.02375450343652,
  0.02347466875931,  0.02317866262412,  0.02286698888784,  0.02254030223805,
  0.02219846947127,  0.02184121436913,  0.02146918421658,  0.02108320540912,
  0.02068307361793,  0.02026840565003,  0.01984000938527,  0.01939891427005,
  0.01894481804101,  0.01847718567886,  0.01799701182837,  0.01750557806830,
  0.01700244529576,  0.01648685780200,  0.01596003744934,  0.01542359803641,
  0.01487690562344,  0.01431887215443,  0.01375101092308,  0.01317540660371,
  0.01259114041876,  0.01199659638648,  0.01139368492942,  0.01078522284204,
  0.01016985984860,  0.00954507013555,  0.00891334185215,  0.00827878115797,
  0.00763935787810,  0.00699076245664,  0.00633636534216,  0.00568300310799,
  0.00502758855697,  0.00436146638925,  0.00368912213436,  0.00302530527821,
  0.00236661114697,  0.00168881658670,  0.00098957111595,  0.00035309352009
};
static const double gaussPoint[nGauss] = {
  -0.99921012322744,  -0.99584052511884,  -0.98978789522222,  -0.98106720175260,
  -0.96970178876505,  -0.95572225584000,  -0.93916627611642,  -0.92007847617763,
  -0.89851031081005,  -0.87451992264690,  -0.84817198478593,  -0.81953752616215,
  -0.78869373993226,  -0.75572377530659,  -0.72071651335573,  -0.68376632738136,
  -0.64497282848948,  -0.60444059704851,  -0.56227890075394,  -0.51860140005857,
  -0.47352584176171,  -0.42717374158308,  -0.37967005657680,  -0.33114284826845,
  -0.28172293742326,  -0.23154355137603,  -0.18073996487343,  -0.12944913539695,
  -0.07780933394954,  -0.02595977230125,
  0.02595977230125,  0.07780933394954,
  0.12944913539695,  0.18073996487343,  0.23154355137603,  0.28172293742326,
  0.33114284826845,  0.37967005657680,  0.42717374158308,  0.47352584176171,
  0.51860140005857,  0.56227890075394,  0.60444059704851,  0.64497282848948,
  0.68376632738136,  0.72071651335573,  0.75572377530659,  0.78869373993226,
  0.81953752616215,  0.84817198478593,  0.87451992264690,  0.89851031081005,
  0.92007847617763,  0.93916627611642,  0.95572225584000,  0.96970178876505,
  0.98106720175260,  0.98978789522222,  0.99584052511884,  0.99921012322744
};
static const double gaussWeight[nGauss] = {
  0.00202681196887,  0.00471272992695,  0.00738993116335,  0.01004755718229,
  0.01267816647682,  0.01527461859678,  0.01782990101421,  0.02033712072946,
  0.02278951694400,  0.02518047762152,  0.02750355674992,  0.02975249150079,
  0.03192121901930,  0.03400389272495,  0.03599489805108,  0.03788886756924,
  0.03968069545238,  0.04136555123559,  0.04293889283593,  0.04439647879579,
  0.04573437971611,  0.04694898884891,  0.04803703181997,  0.04899557545576,
  0.04982203569055,  0.05051418453251,  0.05107015606986,  0.05148845150098,
  0.05176794317491,  0.05190787763122,
  0.05190787763122,  0.05176794317491,
  0.05148845150098,  0.05107015606986,  0.05051418453251,  0.04982203569055,
  0.04899557545576,  0.04803703181997,  0.04694898884891,  0.04573437971611,
  0.04439647879579,  0.04293889283593,  0.04136555123559,  0.03968069545238,
  0.03788886756924,  0.03599489805108,  0.03400389272495,  0.03192121901930,
  0.02975249150079,  0.02750355674992,  0.02518047762152,  0.02278951694400,
  0.02033712072946,  0.01782990101421,  0.01527461859678,  0.01267816647682,
  0.01004755718229,  0.00738993116335,  0.00471272992695,  0.00202681196887
};
#endif // JACOBI_121

//====================================================================
//====================================================================

#endif
