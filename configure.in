## XXX: Should probably set AC_PREFIX_DEFAULT to something good some day.
## TODO:
##  - Automatically detect TEMPLATE_BOX and TEMPLATE_TAG variables

AC_INIT(README.PSE)
AC_CONFIG_HEADER(sci_config.h)
AC_CONFIG_AUX_DIR(scripts)
AC_PREREQ(2.0)

##-- Check for different versions --------------------------------------------

AC_ARG_ENABLE(scirun,
	[  --enable-scirun		Build the SCIRun modules],
	[scirun="$enableval"],
	[scirun=${scirun='no'}])
AC_ARG_ENABLE(uintah,
	[  --enable-uintah		Build the Uintah modules],
	[uintah="$enableval"],
	[uintah=${uintah='yes'}])
AC_ARG_ENABLE(davew,
	[  --enable-davew		Build the Dave Weinstein modules],
	[davew="$enableval"],
	[davew=${davew='no'}])
AC_ARG_ENABLE(mcq,
	[  --enable-mcq                 Build John McQ's modules],
	[mcq="$enableval"],
	[mcq=${mcq='no'}])
AC_ARG_ENABLE(exename,
	[  --enable-exename		Override the default executable name],
	[exename="$enableval"],
	[exename=${exename='default'}])

if test "$scirun" = "no" -a "$uintah" = "no" -a "$davew" = "no"; then
  echo "Please at least use one of:"
  echo "  --enable-scirun"
  echo "  --enable-uintah"
  echo "  --enable-davew"
  echo "  --enable-mcq"
  exit 1
fi

PACKAGE_DIRS=""
PACKAGE_PATH="\$(OBJTOP_ABS)/PSECommon/libPSECommon.so\(\$(SRCTOP_ABS)/PSECommon/GUI\)"
package_output=""

if test "$scirun" = "yes"; then
  PACKAGE_DIRS=$PACKAGE_DIRS" SCIRun"
  PACKAGE_PATH=$PACKAGE_PATH":\$(OBJTOP_ABS)/SCIRun/libSCIRun.so\(\$(SRCTOP_ABS)/SCIRun/GUI\)"
  EXENAME="scirun"
  package_output="$package_output \
	      SCIRun/Makefile \
	        SCIRun/Datatypes/Makefile \
		  SCIRun/Datatypes/Image/Makefile \
		SCIRun/Modules/Makefile \
		  SCIRun/Modules/Image/Makefile \
		  SCIRun/Modules/Mesh/Makefile \
		  SCIRun/Modules/Tbon/Makefile \
		  SCIRun/Modules/Visualization/Makefile \
		  SCIRun/Modules/Writers/Makefile
		  "
fi

if test "$uintah" = "yes"; then
  PACKAGE_DIRS=$PACKAGE_DIRS" Uintah"
  PACKAGE_PATH=$PACKAGE_PATH":\$(OBJTOP_ABS)/Uintah/libUintah.so\(\$(SRCTOP_ABS)/Uintah/GUI\)"
  EXENAME="uintah"
  package_output="$package_output \
              Uintah/Makefile \
                Uintah/Datatypes/Makefile \
                  Uintah/Datatypes/Particles/Makefile \
                Uintah/Modules/Makefile \
                  Uintah/Modules/MPMViz/Makefile \
                  Uintah/Modules/Readers/Makefile
		  "
fi

if test "$davew" = "yes"; then
  PACKAGE_DIRS=$PACKAGE_DIRS" DaveW"
  PACKAGE_PATH=$PACKAGE_PATH":\$(OBJTOP_ABS)/DaveW/libDaveW.so\(\$(SRCTOP_ABS)/DaveW/GUI\)"
  EXENAME="davew"
  package_output="$package_output \
	      DaveW/Makefile \
                DaveW/Datatypes/Makefile \
                  DaveW/Datatypes/CS684/Makefile \
                  DaveW/Datatypes/General/Makefile \
                  DaveW/Datatypes/SiRe/Makefile \
                DaveW/Modules/Makefile \
                  DaveW/Modules/CS684/Makefile \
                  DaveW/Modules/EEG/Makefile \
                  DaveW/Modules/EGI/Makefile \
                  DaveW/Modules/FDM/Makefile \
                  DaveW/Modules/FEM/Makefile \
                  DaveW/Modules/ISL/Makefile \
                  DaveW/Modules/MEG/Makefile \
                  DaveW/Modules/Readers/Makefile \
                  DaveW/Modules/SiRe/Makefile \
                  DaveW/Modules/Tensor/Makefile \
                  DaveW/Modules/Writers/Makefile \
                DaveW/ThirdParty/Makefile \
                  DaveW/ThirdParty/NumRec/Makefile \
                  DaveW/ThirdParty/OldLinAlg/Makefile \
                  DaveW/ThirdParty/Quaternions/Makefile \
                  DaveW/ThirdParty/RegTools/Makefile \
                  DaveW/ThirdParty/SparseLib/Makefile \
                    DaveW/ThirdParty/SparseLib/Leonid/Makefile \
                DaveW/convert/Makefile \
		"
fi

if test "$mcq" = "yes"; then
  PACKAGE_DIRS=$PACKAGE_DIRS" McQ"
  PACKAGE_PATH=$PACKAGE_PATH":\$(OBJTOP_ABS)/McQ/libMcQ.so\(\$(SRCTOP_ABS)/McQ/GUI\)"
  EXENAME="pse"
  package_output="$package_output \
              McQ/Makefile \
              McQ/Euler/Makefile \
              "
fi

if test "$exename" = "default"; then
  EXENAME=$EXENAME
else
  EXENAME=$exename
fi

AC_SUBST(PACKAGE_DIRS)
AC_SUBST(PACKAGE_PATH)
AC_SUBST(EXENAME)

##-- Canonical Host Type -----------------------------------------------------

AC_CANONICAL_HOST

##-- Thread libraries --------------------------------------------------------

AC_ARG_ENABLE(threads,
	[  --enable-threads		Specify a thread implementation (pthreads, irix)],
	[threads="$enableval"],
	[threads=${threads='unknown'}])
AC_SUBST(LOCK_IMPL)
AC_SUBST(THREAD_IMPL)
AC_SUBST(TIME_IMPL)

##-- Compiler options --------------------------------------------------------
AC_ARG_ENABLE(debug,
	[  --enable-debug		Turn on debugging (usually -g flag)],
	[debug="$enableval"],
	[debug=${debug='no'}])
AC_ARG_ENABLE(optimize,
	[  --enable-optimize		Turn on debugging (usually -O2 flag)],
	[optimize="$enableval"],
	[optimize=${optimize='no'}])

extra_cflags="";
if test "$debug" = "yes"; then
  extra_cflags="-g ${extra_cflags}";
elif ! test "$debug" = "no"; then
  extra_cflags="$debug ${extra_cflags}";
fi
if test "$optimize" = "yes"; then
  extra_cflags="-O2 ${extra_cflags}";
elif ! test "$optimize" = "no"; then
  extra_cflags="$optimize ${extra_cflags}";
fi

##-- Host-Specific Defaults --------------------------------------------------

AC_SUBST(CC)
AC_SUBST(CXX)
AC_SUBST(AS)
AC_SUBST(LD)
AC_SUBST(CFLAGS)
AC_SUBST(SOFLAGS)
AC_SUBST(LDFLAGS)
AC_SUBST(ASFLAGS)
AC_SUBST(LDRUN_PREFIX)
AC_SUBST(BINARYFLAGS)

AC_ARG_ENABLE(64bit,
	[  --enable-64bit		Compile in 64 bit mode],
	[is_64bit="$enableval"],
	[is_64bit=$i{is_64bit='no'}])

case $host in
  *-irix*) echo -n "Checking for /opt/MIPSpro/bin/cc... "
	   if test "$is_64bit" = "yes" ; then
             BINARYFLAGS="-64 -mips4"
           else
             BINARYFLAGS="-n32 -mips4"
           fi
           if test -f /opt/MIPSpro/bin/cc; then
             echo "yes"
             echo "  Using MIPSpro compilers instead of gcc; they're better"
             CC=/opt/MIPSpro/bin/cc
             CXX=/opt/MIPSpro/bin/CC
             AS=/opt/MIPSpro/bin/as
             LD=/opt/MIPSpro/bin/ld
           else
             echo "no"
           fi
           if test "${CC}" = "" ; then
             if which CC > /dev/null 2>&1 ; then
               CXX=`which CC`
               echo "Using C++ compiler ${CXX}"
             fi
             if which cc > /dev/null 2>&1 ; then
               CC=`which cc`
               echo "Using C compiler ${CC}"
             fi
             if which as > /dev/null 2>&1 ; then
               AS=`which as`
               echo "Using Assembler ${AS}"
             fi
           fi
           CFLAGS="-fullwarn -xansi -LANG:std ${CFLAGS} $BINARYFLAGS $extra_cflags"
	   ASFLAGS="$BINARYFLAGS ${ASFLAGS}"
           SOFLAGS="-shared $BINARYFLAGS -LANG:std -no_unresolved -J\$(MAKE_PARALLELISM) -update_registry \$(OBJTOP)/so_locations ${SOFLAGS}"
           LDFLAGS="$BINARYFLAGS -LANG:std -no_unresolved -J\$(MAKE_PARALLELISM)"
           LDRUN_PREFIX="-Wl,-rpath -Wl,"
	   TEMPLATE_TAG=
	   TEMPLATE_BOX="<>"
	   LOCK_IMPL=lock_mips.s
           if test "$threads" = "unknown"; then
             threads="irix"
           fi
	   TIME_IMPL=Time_irix.cc
           ;;
  *-linux-gnu)
     AC_PROG_CC
     AC_PROG_CXX
     CFLAGS="-Wall ${CFLAGS}"
     TEMPLATE_TAG=
     TEMPLATE_BOX="<>"
     LOCK_IMPL=""
     SOFLAGS="-shared ${SOFLAGS}"
     LDRUN_PREFIX="-L"
     TIME_IMPL=Time_unix.cc
           ;;
  *)
     echo "WARNING: Untested configuration - you are on your own!"
     AC_PROG_CC
     AC_PROG_CXX
     ;;
esac

##-- Part II thread configuration --------------------------------------------

if test "$threads" = "unknown"; then
   threads="pthreads"
fi
case $threads in
  pthreads*) THREAD_LIBS="-lpthread"
  ;;
  irix)     THREAD_LIBS="-lfetchop"
  ;;  
  *)
    echo "Unknown thread implementation: $threads"
    exit 1
  ;;
esac
AC_SUBST(THREAD_LIBS)
THREAD_IMPL="Thread_"$threads

##-- Find a C Compiler -------------------------------------------------------
## AC_PROG_CC
## AC_PROG_CXX

##-- Find Perl ---------------------------------------------------------------

AC_PATH_PROG(PERL, perl, none)
if test "${PERL}" = "none" ; then
  echo "  You must have perl on your path for configure to succeed."
  exit 1
fi

##-- Twitty SGI License Chatter ----------------------------------------------

echo -n "Checking if ${CC} talks too much... "
touch wow.c
if ${CC} -c wow.c 2>&1 | fgrep "requires a license password" > /dev/null ; then
  echo "yes"
  echo "  Using cc and CC wrappers in scripts/cc and scripts/CC to remove"
  echo "  irritating license verbosity from SGI's Varsity Pack MIPSpro"
  echo "  compilers."

  mkdir -p scripts
  sed "s+VERBOSE_CC+${CC}+g;" < ${srcdir}/scripts/cc.in > scripts/cc
  sed "s+VERBOSE_CC+${CXX}+g;" < ${srcdir}/scripts/cc.in > scripts/CC
  chmod 755 scripts/cc scripts/CC

  CC="$(OBJTOP)/scripts/cc"
  CXX="$(OBJTOP)/scripts/CC"
else
  echo "no"
fi
rm -f wow.c wow.o

##-- One Rarely Finds This ---------------------------------------------------

AC_CHECK_LIB(Kenny,life_signs,true,
             echo "  Oh my God!  They killed Kenny!  You bastards!")

##-- Dependency Regen Switch -------------------------------------------------

echo -n "Determining cc dependency regen switch: "
rm -f configure-test.*
echo "#include <stdio.h>" > configure-test.c
CC_DEPEND_REGEN=''

# GCC just puts the dependency info in a .d when you provide the -MD switch.
if test "${CC_DEPEND_REGEN}" = "" ; then
  ${CC} -MD -c configure-test.c > /dev/null 2>&1
  if test -f configure-test.d ; then
    CC_DEPEND_REGEN='-MD'
  fi
fi

# SGI cc wants -MDupdate <filename>.
if test "${CC_DEPEND_REGEN}" = "" ; then
  ${CC} -MDupdate configure-test.d -c configure-test.c
  if test -f configure-test.d ; then
    CC_DEPEND_REGEN='-MDupdate $(basename $(notdir $@)).d'
  fi
fi

rm -f configure-test.*

if test "${CC_DEPEND_REGEN}" = "" ; then
  echo unknown
  echo "  Warning: Dependency information will not be maintained."
else
  echo $CC_DEPEND_REGEN
fi
AC_SUBST(CC_DEPEND_REGEN)

##-- How Many Processors -----------------------------------------------------

unset NUM_CPUS
echo -n "Determining physical processor count: "
case $host in
  *-irix*) NUM_CPUS="`TERM=dumb top -n 1 | fgrep CPUs | cut -d' ' -f1`"
           ;;
  *linux*) NUM_CPUS="`cat /proc/cpuinfo | fgrep processor | wc | cut -c1-7`"
           ;;
  *)       NUM_CPUS="1"
           ;;
esac
if ! NUM_CPUS="`expr $NUM_CPUS + 0 2> /dev/null`" ; then
  NUM_CPUS="1"
fi
echo $NUM_CPUS

MAKE_PARALLELISM="`expr ${NUM_CPUS} \* 2`"
export MAKE_PARALLELISM
AC_SUBST(MAKE_PARALLELISM)

##-- Find TCL ----------------------------------------------------------------

echo -n "Looking for Pre-built TCL 8.0.4... "
unset Wish80
if Wish80="`which tclsh8.0`" ; then
  unset cfsh
  cfsh="`dirname $Wish80`/../lib/tclConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  fi
fi
if test "$TCL_VERSION" = "8.0" -a "$TCL_PATCH_LEVEL" = ".4" ; then
  # TCL_PREFIX set by tclConfig.sh
  TCL_INCLUDE_DIR="${TCL_PREFIX}/include"
  TCL_LIB_DIR="${TCL_PREFIX}/lib"
  # TCL_LIB_FLAG set by tclConfig.sh, but needs eval'ing for debug flags
  TCL_LIB_FLAG="`eval echo $TCL_LIB_FLAG`"

  echo -L$TCL_LIB_DIR $TCL_LIB_FLAG

  if test "$TCL_LD_FLAGS" != "" ; then
    echo "  XXX: Check SGI ABI"
  fi

else
  echo "not found -- must build"
  echo "  Implement me."
  exit 1
fi

AC_SUBST(TCL_INCLUDE_DIR)
AC_SUBST(TCL_LIB_DIR)
AC_SUBST(TCL_LIB_FLAG)

##-- Find Tk -----------------------------------------------------------------

echo -n "Looking for Pre-built Tk 8.0.4... "
unset Wish80
if Wish80="`which wish8.0`" ; then
  unset cfsh
  cfsh="`dirname $Wish80`/../lib/tkConfig.sh"
  if test -f $cfsh ; then
    . $cfsh
  fi
fi
if test "$TK_VERSION" = "8.0" -a "$TK_PATCH_LEVEL" = ".4" ; then
  # TK_PREFIX set by tclConfig.sh
  TK_INCLUDE_DIR="${TK_PREFIX}/include"
  TK_LIB_DIR="${TK_PREFIX}/lib"
  # TK_LIB_FLAG set by tclConfig.sh, but needs eval'ing for debug flags
  TK_LIB_FLAG="`eval echo $TK_LIB_FLAG`"

  echo -L$TK_LIB_DIR $TK_LIB_FLAG

  # Can't check the SGI ABI 'cause LD_FLAGS doesn't get def'd in tkConfig.sh;
  # just assume the tk we find matches the tcl we find.

  if ! test "$TCL_PREFIX" = "$TK_PREFIX" ; then
    echo "  WARNING: Tcl and Tk not colocated; this might indicate a problem"
  fi

  if ! test "$TCL_VERSION" = "$TK_VERSION" -a \
            "$TCL_PATCH_LEVEL" = "$TK_PATCH_LEVEL" ; then
    echo "  ERROR: Tcl and Tk are not the same version & patch level; this is Wrong"
    exit 1
  fi

else
  echo "not found -- must build"
  BUILDING_TK=1
  echo "  Implement me."
  exit 1
fi

AC_SUBST(TK_INCLUDE_DIR)
AC_SUBST(TK_LIB_DIR)
AC_SUBST(TK_LIB_FLAG)

##-- Find iTcl ---------------------------------------------------------------

echo -n "Looking for Pre-built iTk 3.0... "
if test "$BUILDING_TK" = "" ; then
  unset Wish80
  if sh="`which itkwish3.0`" ; then
    unset cfsh
    shdir="`dirname $sh`"
    cfsh="$shdir/../lib/itkConfig.sh"
    if test -f $cfsh ; then
      . $cfsh
    fi
  fi
fi
if test "$ITCL_VERSION" = "3.0" ; then
  ITCL_PREFIX="`cd $shdir/.. ; pwd`"
  ITCL_INCLUDE_DIR="${ITCL_PREFIX}/include"
  ITCL_LIB_DIR="${ITCL_PREFIX}/lib"
  ITCL_LIB_FLAG="-litk3.0 -litcl3.0"
  ITCL_WIDGETS="${ITCL_LIB_DIR}/iwidgets/scripts"

  echo -L$ITCL_PREFIX $ITCL_LIB_FLAG
else
  echo "not found -- must build"
  echo "  Implement me."
  exit 1
fi

AC_SUBST(ITCL_INCLUDE_DIR)
AC_SUBST(ITCL_WIDGETS)
AC_SUBST(ITCL_LIB_DIR)
AC_SUBST(ITCL_LIB_FLAG)

##-- Check for option to build new parallel (distributed memory) SCIRun ------

AC_ARG_ENABLE(enable_parallel,
	[  --enable-parallel		Compile experimental distributed memory version],
	[enable_parallel="$enableval"],
	[enable_parallel=${enable_parallel='no'}])
AC_ARG_WITH(with_globus,
	[  --with-globus=DIR		Use the globus installation in DIR],
	[with_globus="$withval"],
	[with_globus=${with_globus='no'}])

if test "$enable_parallel" = "yes"; then
  if test "$with_globus" = "no"; then
    echo "Must include --with-globus with --enable-parallel"
    exit 1
  fi

  PARALLEL_DEFINE="#define SCI_PARALLEL"
  parallel_output="
	        SCICore/globus_threads/Makefile \
	      Component/Makefile \
	        Component/PIDL/Makefile \
	        tools/sidl/Makefile 
		testprograms/Component/Makefile \
		  testprograms/Component/pingpong/Makefile \
		"
  BUILD_PARALLEL="yes"
  GLOBUS_INCLUDE="-I$with_globus/include"
  GLOBUS_LIB="$with_globus/lib"
else
  PARALLEL_DEFINE=""
  BUILD_PARALLEL="no"
  GLOBUS_INCLUDE=""
  GLOBUS_LIB=""
fi
AC_SUBST(GLOBUS_INCLUDE)
AC_SUBST(GLOBUS_LIB)
AC_SUBST(PARALLEL_DEFINE)
AC_SUBST(BUILD_PARALLEL)

##-- Emit local configuration file -------------------------------------------

if test "$is_64bit" = "yes"; then
  NBITS=64
else
  NBITS=32
fi
AC_SUBST(NBITS)

AC_ARG_ENABLE(assertion-level,
	[  --enable-assertion-level=N   Use assertion level N (0-3)],
	[enable_assertion_level="$enableval"],
	[enable_assertion_level=${enable_assertion_level=3}])
ASSERTION_LEVEL=$enable_assertion_level
AC_SUBST(ASSERTION_LEVEL)

AC_SUBST(TEMPLATE_BOX)
AC_SUBST(TEMPLATE_TAG)

##-- Check enterleave flag ---------------------------------------------------

AC_ARG_ENABLE(enterleave,
	[  --enable-enterleave		Make gmake print out entering/leaving statements],
	[enterleave="$enableval"],
	[enterleave=${enterleave='no'}])

if test "$enterleave" = "yes" ; then
	NOPRINTDIR=EMPTY
else
	NOPRINTDIR="--no-print-directory"
fi
AC_SUBST(NOPRINTDIR)

##-- Check for header files --------------------------------------------------

AC_CHECK_HEADERS(limits.h)
AC_CHECK_HEADERS(sys/select.h)
AC_CHECK_HEADERS(unistd.h)
AC_CHECK_HEADERS(sys/time.h)
AC_PATH_XTRA()
if test x"$X_LIBS" = x"-L/usr/lib" -o x"$X_LIBS" = x" -L/usr/lib"; then
  X_LIBS=""
fi

##-- Check for programs ------------------------------------------------------

# Yacc - for sidl
AC_PROG_YACC()
AC_SUBST(YACC)

# Lex - for sidl
AC_PROG_LEX()
AC_SUBST(LEX)
AC_SUBST(LEXLIB)

##-- Generate Output Files ---------------------------------------------------

AC_OUTPUT(Makefile \
	  sci_defs.h \
            scripts/compile.mk \
	    scripts/recurse.mk \
            scripts/targets.mk \
              SCICore/Makefile \
                SCICore/Containers/Makefile \
                SCICore/Datatypes/Makefile \
                SCICore/Exceptions/Makefile \
                SCICore/Geom/Makefile \
                SCICore/Geometry/Makefile \
                SCICore/Malloc/Makefile \
                SCICore/Math/Makefile \
                SCICore/Persistent/Makefile \
                SCICore/Process/Makefile \
                SCICore/TclInterface/Makefile \
                SCICore/TkExtensions/Makefile \
                SCICore/Tester/Makefile \
		SCICore/Thread/Makefile \
                SCICore/Util/Makefile \
              PSECore/Makefile \
                PSECore/Comm/Makefile \
                PSECore/Datatypes/Makefile \
                PSECore/Constraints/Makefile \
                PSECore/Dataflow/Makefile \
                PSECore/Widgets/Makefile \
              main/Makefile \
              PSECommon/Makefile \
                PSECommon/ThirdParty/Makefile \
                  PSECommon/ThirdParty/mpeg/Makefile \
                PSECommon/Modules/Makefile \
                  PSECommon/Modules/FEM/Makefile \
                  PSECommon/Modules/Readers/Makefile \
                  PSECommon/Modules/Salmon/Makefile \
                  PSECommon/Modules/Surface/Makefile \
                  PSECommon/Modules/Matrix/Makefile \
                  PSECommon/Modules/Iterators/Makefile \
                  PSECommon/Modules/Fields/Makefile \
                  PSECommon/Modules/Writers/Makefile \
                  PSECommon/Modules/Visualization/Makefile \
	      testprograms/Makefile \
		testprograms/Malloc/Makefile \
		testprograms/Thread/Makefile \
	      $package_output \
	      $parallel_output
	      , echo timestamp > stamp-h
         )
