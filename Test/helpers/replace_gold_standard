#!/bin/sh

# echos are commented to not output so much

gold_standard_dir="$1"
replacement_dir="$2"
testname="$3"

if [ $# -ne 3 -o ! -d $gold_standard_dir/$testname -o ! -d $replacement_dir/$testname/*.uda ]; then
  echo "usage: $0 <gold_standard_dir> <replacement_dir> <testname>"
  exit 1
fi

# if the YES env var is set to yes then don't prompt the user - effective for 
# mass replaces

if [ "$YES" == "y" -o "$YES" == "yes" ]; then
  yesno="yes"
else
  echo "Are you sure you want to replace the gold standard at $gold_standard_dir/$testname with $replacement_dir/$testname? (Enter 'yes' or 'y' to continue.) "
  read yesno
fi


# remove the udas, and copy the new ones
if [ $yesno == "y" -o $yesno == "yes" ]; then
#  echo "rm -rf $gold_standard_dir/$testname/*.uda"
  echo "Replacing $testname udas"
  rm -r $gold_standard_dir/$testname/*.uda
  if [ $? != "0" ]; then
    echo "$testname replacement failed - could not remove old udas"
    exit 1
  fi

#  echo "cp -r --dereference $replacement_dir/$testname/*.uda $gold_standard_dir/$testname/."
  # if it has a --dereference option, then use it
  cp -r --dereference $replacement_dir/$testname/*.uda $gold_standard_dir/$testname/. >& /dev/null

  # sometimes it doesn't work with --dereference...
  if [ $? != "0" ]; then
#    echo "Try without --dereference."
#    echo "cp -r $replacement_dir/$testname/*.uda $gold_standard_dir/$testname/."
    cp -r $replacement_dir/$testname/*.uda $gold_standard_dir/$testname/.
    if [ $? != "0" ]; then
	echo "$testname replacement failed - could not copy new udas"
	exit 1
    fi
  fi

  # don't prompt if env var is set
  if [ "$YES" == "y" -o "$YES" == "yes" ]; then
    yesno="yes"
  else
    echo "Are you sure you want to replace the memory usage results? (Enter 'yes' or 'y' to continue.) "
    read yesno
  fi

  # replace the memory usage (both normal and restart)
  if [ $yesno == "y" -o $yesno == "yes" ]; then
#    echo "rm $gold_standard_dir/$testname/*malloc*"
    echo "Replacing $testname memory results"
    rm $gold_standard_dir/$testname/*malloc* >& /dev/null
#    echo "cp $replacement_dir/$testname/malloc_stats $gold_standard_dir/$testname/."
    cp $replacement_dir/$testname/malloc_stats $gold_standard_dir/$testname/. >& /dev/null
    if [ $? != "0" ]; then
      echo "No malloc_stats -- ok"
    fi
#    echo "cp $replacement_dir/$testname/restart/restart_malloc_stats $gold_standard_dir/$testname/."
    cp $replacement_dir/$testname/restart/restart_malloc_stats $gold_standard_dir/$testname/. >& /dev/null
    if [ $? != "0" ]; then
      echo "No restart_malloc_stats -- ok"
    fi
  else
    echo "No memory usage results replaced"
  fi

  # change groups and permissions so (hopefully) anybody can replace them later
#  echo "chgrp -R csafe $gold_standard_dir/$testname/*"
  chgrp -R csafe "$gold_standard_dir/$testname"/* 
  if [ $? != "0" ]; then
    echo "$testname replacement failed - Could not change groups"
    exit 1
  fi
#  echo "chmod -R g+rwX $gold_standard_dir/$testname/*"
  chmod -R g+rwX "$gold_standard_dir/$testname"/*
  if [ $? != "0" ]; then
    echo "$testname replacement failed - Could not change permissions"
    exit 1
  fi

  echo "$testname Gold Standard successfully replaced!"
  echo
else
  echo "$testname replacement cancelled"
  exit 1
fi
