<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../doc/Utilities/XML/component.dtd">
<?xml-stylesheet href="../../../doc/Utilities/XML/component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->


<component name="Isosurface" category="Visualization">
  <overview>
    <authors>
      <author>Yarden Livnat</author>
    </authors>
    <summary>Isosurface allows visualization of an isopotential
     surface within a model.
     </summary>
     <description>
      <p>
	The Isosurface module is used to visualize surfaces or lines
        of constant value within a scalar field.  The Iso Value slider
        in the GUI determines which value is used to generate the
        isopotential surface.  The Update options are: On Release,
        Manual and Auto.  On Release will not re-execute the
        module until the user releases the Iso Value scroll bar. If
        manual is selected, the module will not re-execute until the
	Extract button is pressed.  The Auto option re-executes the module
	every time the Iso Value scroll bar moves. If the user selects the
	Auto Extract from New Field option and a new Field comes in, the
	module completely re-executes, calculating a new Isosurface.  The
	Build Output Field check box allows the user to pass the generated
	Isosurface downstream as a field. If there is no ColorMap passed
	in to the module, the user can specify the Default Color to
        use instead.
      </p>

      <p> The Isosurface can be calculated using the Marching Cubes
method, which examines the isopotential at the corners of every
element within the input field.  This operation is parallelizeable and
allows the user to specify how many threads are used to do the
computation.  If only a few isovalues are to be examined then this is
a great choice.
      </p>

      <p>
	The NOISE method computes and stores a table containing all of
the input field elements and their values.  Then when the isovalue is
specified the surface can be extracted more quickly by looking in the
table for the appropriate values.  This gives better interactive
performance at the cost of some setup time and space.  For details see
Yarden's paper on NOISE, which should be available somewhere on the
SCIRun webpages.  *Note, insert a real reference here.*
      </p>

      <p>
        As of September 2002 this module can handle scalar fields of the
        following geometry type: LatVolField, StructHexVolField, TetVolField,
        HexVolField, TriSurfField, QuadSurfField and ImageField.
        Isocontours are generated for the surface input fields, and
        Isosurfaces are generated for the volume input fields.
      </p>
    </description>
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>Field</name>
	<datatype>SCIRun::Field</datatype>
      </port>
      <port>
        <name>Color Map</name>
	<datatype>SCIRun::ColorMap</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>Surface</name>
	<datatype>SCIRun::Field</datatype>
      </port>
      <port>
        <name>Geometry</name>
	<datatype>SCIRun::Geometry</datatype>
      </port>
    </outputs>
  </io>
  <gui>
    <img>../Modules/Visualization/doc/IsoSurfaceUI.jpg</img>
  </gui>
  <testing>
  </testing>
</component> 










