<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../doc/Utilities/XML/component.dtd">
<?xml-stylesheet href="../../../doc/Utilities/XML/component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<component name="SynchronizeGeometry" category="Render">
  <overview>
    <authors>
	<author>Kai Li</author>
    </authors>
    <summary>Create a barrier to synchronize a set of geometry streams.</summary>
    <description>
	<p> A geometry stream is composed of multiple geometry samples.
	    Each geometry sample is created by calling GeometryOPort::
	    delObj() and/or GeometryOPort::addObj() one or more times.
	    All geometry samples with the same virtual sequence number
	    in differenct streams must reach the barrier before they can
	    all proceed. The boundary of geometry samples is the 
	    GeometryFlush or GeometryFlushViews message, which is sent 
	    out explicitly by calling functions like GeometryOPort::
	    flushViews(), or implicitly by SCIRun after you did some 
	    geometry operations (delete or add) in Module::execute() but 
            did not call any flush messages. Sometimes Module::tcl_command()
            updates the geometry objects created in the last sample and 
            just sends flush message without any other GeometryDelObj or 
	    GeometryAddObj messages between the current and last flush 
            message. In this case, the flush message is taken as an
	    asynchronous message and sent out without synchronzation with
	    other geometry streams.
	</p>
    </description>
  </overview>
  <implementation>
  </implementation>
  <io>
    <inputs lastportdynamic="yes">
      <port>
        <name>InputGeometry</name>
        <datatype>SCIRun::Geometry</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>OutputGeometry</name>
        <datatype>SCIRun::Geometry</datatype>
	<componentname>Viewer</componentname>
      </port>
    </outputs>
  </io>
  <gui>
  </gui>
  <testing>
  </testing>
</component>

