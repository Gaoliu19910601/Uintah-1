<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../../doc/Utilities/XML/component.dtd">

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->


<component name="FieldToNrrd" category="DataIO">
  <overview>
    <authors>
      <author>David Weinstein</author>
      <author>Martin Cole</author>
    </authors>
    <summary>Take the data from a field or fields and wrap it with a
nrrd and pass it out.
    </summary>
    <description>
      <p>Inputs: a field or multiple fields that share the *same* mesh.
         Output: a NrrdData.
      </p>
      <p>
         This module combines sets of data for a given mesh, into one object for storage. This object is a NrrdData.  There are many operations that can be applied to the data as a nrrd, <slink path="http://www.cs.utah.edu/~gk/teem/unnrrdu/index.html"></slink> many of which are supported in this Teem package.
      </p>
      <p>
         The input port is dynamic.  Each field that is accepted as input, must share a mesh, otherwise an error is signaled.  Data from each field as added to the nrrd that is output.  So and entire time series can be built up,or slices can be stacked up to create a volume, or scanlines can be stacked up to form an Image etc..
      </p>
    </description>
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>Field</name>
	<datatype>SCIRun::Field</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>Nrrd</name>
	<datatype>Teem::Nrrd</datatype>
      </port>
    </outputs>
  </io>
  <testing>
  </testing>
</component>
