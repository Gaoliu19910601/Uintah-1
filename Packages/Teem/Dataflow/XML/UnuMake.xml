<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../Dataflow/XML/component.dtd">

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->

<component name="UnuMake" category="Unu">
  <overview>
    <authors>
      <author>Darby Van Uitert</author>
    </authors>
    <summary>Create a nrrd (or nrrd header) from scratch. The data can be in one
or more files, or coming from stdin. This provides an easy way of providing
the bare minimum information about some data so as to wrap it in a nrrd,
either to pass on for further unu processing, or to save to disk. However,
with -h , this creates only a detached nrrd header file, without ever reading
or writing data. When reading multiple files, each file must contain the data
for one slice along the slowest axis. Nearly all the options below refer to
the finished nrrd resulting from joining all the slices together, with the
exception of -ls , -bs , and -e , which apply to every input slice file. When
reading data from many seperate files, it may be easier to put their filenames
in a response file; there can be one or more filenames per line of the
response file.</summary>
    <description>
    <p>Create a nrrd (or nrrd header) from scratch. The data can be in one
or more files, or coming from stdin. This provides an easy way of providing
the bare minimum information about some data so as to wrap it in a nrrd,
either to pass on for further unu processing, or to save to disk. However,
with -h , this creates only a detached nrrd header file, without ever reading
or writing data. When reading multiple files, each file must contain the data
for one slice along the slowest axis. Nearly all the options below refer to
the finished nrrd resulting from joining all the slices together, with the
exception of -ls , -bs , and -e , which apply to every input slice file. When
reading data from many seperate files, it may be easier to put their filenames
in a response file; there can be one or more filenames per line of the
response file.</p>
     <p>Write Header : Check to write out a .nhdr file.  This file can be specified by browsing to it by clicking the Specify Header File button.</p>
     <p>Kind : Specify the kind of the first axis. Other axes kinds may be set using UnuAxinfo.</p>
     <p>Size : Specify the sizes separated by a single space.  This indicates the number of samples along each axis.</p>
     <p>Spacing : These float values will indicate the spacing between samples. These should be separated by white space.</p>
     <p>Labels : Short string labels for each axis.  These labels should be separated by a space.</p>
     <p>Content :Specifies the content string of the nrrd, which is
      built upon by many nrrd function to record a history of
      operations.</p>
      <p>Line Skip : number of ascii lines to skip before reading data</p>
      <p>Byte Skip : number of bytes to skip (after skipping ascii lines, if
       any) before reading data. Can use -bs -1 to skip a
       binary header of unknown length in raw-encoded data.</p>
      <p>Endoding :output file format. Possibilities include raw, ascii, text, hex.</p>
      <p>Endianness : Endianness of data; relevent for any data with value
      representation bigger than 8 bits, with a non-ascii
      encoding: little for Intel and friends; big for everyone
       else. Defaults to endianness of this machine.</p>
      <p>Kev Value Pairs : key/value string pairs to be stored in nrrd. Each
      key/value pair must be a single string.</p>
    </description>
  </overview>
  <implementation>
  </implementation>
  <io>
    <inputs lastportdynamic="no">
    </inputs>
    <outputs>
      <port>
        <name>OutputNrrd</name>
        <datatype>Teem::Nrrd</datatype>
      </port>
    </outputs>
  </io>
  <gui>
    <parameter>
      <widget>Label</widget>
      <label>Autogenerated GUI explanation</label>
    </parameter>
  </gui>
  <testing>
  </testing>
</component>

