<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../Dataflow/XML/component.dtd">

<!--
  The contents of this file are subject to the University of Utah Public
  License (the "License"); you may not use this file except in compliance
  with the License.
  
  Software distributed under the License is distributed on an "AS IS"
  basis, WITHOUT WARRANTY OF ANY KIND, either express or implied. See the
  License for the specific language governing rights and limitations under
  the License.
  
  The Original Source Code is SCIRun, released March 12, 2001.
  
  The Original Source Code was developed by the University of Utah.
  Portions created by UNIVERSITY are Copyright (C) 2001, 1994 
  University of Utah. All Rights Reserved.
-->


<component name="TendEvecRGB" category="Tend">  <overview>
    <authors>
      <author>Martin Cole</author>
    </authors>
    <summary>Make an RGB volume from an eigenvector and an anisotropy.</summary>
    <description>
      <p>Make an RGB volume from an eigenvector and an anisotropy. </p>
      <p>Eigenvector to use : indicate which eigenvector will be colored.</p>
      <p>Anisotropy Metric : Which anisotropy metric to use for modulating the saturation
      of the colors.  All the Westin metrics come in two versions.  Currently supported are:</p>
      <p>cl1, cl2 : Westin's linear.</p>
      <p>cp1, cp2 : Westin's planar.</p>
      <p>ca1, ca2 : Westin's linear + planar.</p>
      <p>cs1, cs2 : Westin's spherical (1-ca).</p>
      <p>ct1, ct2 : GK's anisotropy type (cp/ca).</p>
      <p>ra : Basser/Pierpaoli relative anisotropy.</p>
      <p>fa : Basser/Pierpaoli fractional anisotropy/sqrt(2).</p>
      <p>vf : volume fraction = 1-(Basser/Pierpaoli volume ratio).</p>
      <p>tr : trace.</p>
      <p>Background : gray level to use for voxels who's confidence is zero. This should be a float.</p>
      <p>Gray : he gray level to desaturate towards as anisotropy
      decreases (while confidence remains 1.0). This value should be a float.</p>
      <p>Gamma : gamma to use on color components. This value should be a float.</p>
    </description>
    <examplesr></examplesr>
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>nin</name>
	<datatype>Teem::Nrrd</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>nout</name>
	<datatype>Teem::Nrrd</datatype>
      </port>
    </outputs>
  </io>
  <testing>
  </testing>
</component>
