<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "../../../../../doc/Utilities/XML/component.dtd">
<?xml-stylesheet href="../../../../../doc/package-component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<component name="ShowLeads" category="Visualization">
  <overview>
    <authors>
      <author>Martin Cole</author>
    </authors>
    <summary>Graph a Matrix that has rows of potentials </summary>
    <description>
      <p>The input matrix must be a DenseMatrix.  Unlimited rows. Each
row can have an unlimited number of time instances. The scalar value
at each (row,col) is considered a potential measurment. The graph is a
series of graphs. for each row in the matrix ShowLeads displays a line
graph of the potentials over regular ime intervals. time progresses
along the x-axis.</p>
      <p>Units for time are displayed along the x-axis. The units are
taken as a string from the properties in the Matrix. </p>
      <p>Properties that ShowLeads use are: time-units, time-start,
and time-end time-units is a string that is displayed along the
x-axis, and the start and end time determine the values for time.</p>
      <p>Using the sliders at the top of the dialog, zooms the display
to just the leads that are desired. Changing the Vertical Scale simply
applies a multiplier to the scalar values before display.</p>
      <p>Dragging the yellow vertical bars in the graph window updates
the value at each lead on the left side of the graph.  This allows for
closer data inspection.</p>
      <p>Data is arranged as follows.  Each row in the matrix is a
lead, each column is a time instance.  So at each lead, time(row,col)
is a potential(scalar)</p>
    </description>
  </overview>
  <implementation>
  </implementation>
  <io>
    <inputs lastportdynamic="no">
      <!-- one of (device port file) -->
      <port>
	<name>Potentials</name>
	<description>
	  <p></p>
	</description>
	<datatype>SCIRun::Matrix</datatype>
	<componentname></componentname>
      </port>
    </inputs>
    <outputs>
    </outputs>
  </io>
  <gui>
    <parameter>
      <widget>Label</widget>
      <label>Autogenerated GUI explanation</label>
    </parameter>
  </gui>
  <testing>
  </testing>
</component>

