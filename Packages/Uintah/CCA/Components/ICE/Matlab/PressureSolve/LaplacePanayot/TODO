+==========================================================================+
| A Matlab simulation of Oren's discretization scheme for a scalar         |
| diffusion problem div(a grad u) = f, on an AMR grid.                     |
|                                                                          |
| TODO List                                                                |
+==========================================================================+

To do:

1. Make sure it works for 1-D and test jumping coefficients then.
2. Odd refinement ratio (lower dimensional interpolation stencil for ghosts
   near C/F interface).
4. Write adaptive refinement full code, with checking for stagnation and
   restarting with a twice finer coarsest level.
5. Check tau criterion.
6. Update H1 norm to be the energy norm (x^T * A * x)^(1/2). Check convergence
   rates for all test problems. What about H1-max definition? Maybe get rid 
   of it.
7. Write a function like LShapedOut to remove a square / some structured
   part of the domain (a "net"). Test convergence for parallel plate
   capacitor.
8. Neumann boundary conditions.
9. 3-D simulation with AMR - check that C/F interface works correctly.
11. Find computational bottleneck is setting up the grid in MATLAB.
12. AMR plots of 1-D cut of solution (with all grids at the same plot).
13. Update plotGrid to plot lines instead of rectangles, and print all of the
    cells in one "line" call with vector x,y[,z] coordinates.

Done:
3. Save results to DiscErr.tex after each experiment, not only in the end.
10. Separate param setting (+default params?) into another function.
