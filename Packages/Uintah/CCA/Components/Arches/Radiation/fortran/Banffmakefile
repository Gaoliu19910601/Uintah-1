#  sometimes its useful to add  -check_bounds -Olimit 3000
#  and sometimes its useful to add -p (to do profiling)
     
#FFLAGS	      = -O3 -xgot
#FFLAGS	      = -O2 -mips4 -n32 
#FFLAGS        = -O3 -mips4 -n32 -OPT:IEEE_arithmetic=3 -CG:if_conversion=false:reverse_if_conversion=false 
#FFLAGS        = -O1 -mips4 -n32 
#FFLAGS        = -O3 -mips4 -n32 -OPT:IEEE_arithmetic=3 -CG:if_conversion=false:reverse_if_conversion=false -LNO:opt=0
#FFLAGS        = -O3 -mips4 -n32 -CG:if_conversion=false:reverse_if_conversion=false -LNO:opt=0
#FFLAGS	      = -O3 -mips4 -n32 -OPT:IEEE_arithmetic=3 -CG:if_conversion=false:reverse_if_conversion=false -LNO:pf2=0
FFLAGS	      = -O3 -mips4 -64 -OPT:IEEE_arithmetic=3 -CG:if_conversion=false:reverse_if_conversion=false -LNO:pf2=0 -avoid_gp_overflow -mp 
#FFLAGS	      = -O3 -mips4 -n32 -OPT:IEEE_arithmetic=3 -CG:if_conversion=false:reverse_if_conversion=false -LNO:pf2=0 -mp

DBFLAGS	      = -64 -g2 -xgot

LINKER	      = f77 -mp

MAKEFILE      = Makefile

LIBS          = -lblas

#HDRS          = param1.h \
#		param2.h \
#		param3.h
HDR0          = implic.h
HDR1          = param1.h
HDR2	      = param2.h
HDR3	      = param3.h
HDR4          = param4.h
HDR5          = consts.h


OBJS	      =	banff.o \
		cellg.o \
		cree0.o \
                ddird.o \
                ddiwrt.o \
                eico2.o \
                eih2o.o \
                find.o \
		geomin.o \
		grid.o \
		radcoef.o \
		radht.o \
		rdom0.o \
		rdomr.o \
		restrt.o \
		rordr.o \
		rqacc.o \
		rqiew.o \
		rqins.o \
		rqitb.o \
		rrslt.o \
		rxibc.o \
		ryibc.o \
		rzibc.o \
		setup.o \
                wallpr.o 

DEST          = /pjs/banff/bin

PROGRAM	      = banff

PROGRAM2      = banff2

DEBUGPRGM     = banff_d

all:		$(PROGRAM)

$(PROGRAM2):     $(OBJS) VERSION
		@echo -n "Loading $(PROGRAM2) ... "
		@$(LINKER) $(FFLAGS) $(OBJS) $(LIBS) -o $(PROGRAM2)
		@echo "done"

$(PROGRAM):     $(OBJS) VERSION
		@echo -n "Loading $(PROGRAM) ... "
		@$(LINKER) $(FFLAGS) $(OBJS) $(LIBS) -o $(PROGRAM)
		@echo "done"

$(DEBUGPRGM):   $(OBJS)
		@echo -n "Loading debug version of $(PROGRAM) ... "
		@$(LINKER) $(DBFLAGS) $(OBJS) $(LIBS) -o $(DEBUGPRGM)
		@echo "done"

clean:;		@rm -f $(OBJS)

debug:;		@make -f $(MAKEFILE) $(DEBUGPRGM) "FFLAGS =  $(DBFLAGS)"

install:	$(PROGRAM)
		@echo "Installing $(PROGRAM) in $(DEST)"
		@install -s -f $(PROGRAM) $(DEST)

code:;		cat VERSION param1.h param2.h param3.h param4.h banff.f *.f >> banff.f.all

program:        $(PROGRAM)

update:		$(DEST)/$(PROGRAM)

###
# Parameter dependencies
#$(OBJS): $(HDRS)
banff.o: $(HDR1) $(HDR2) 
cellg.o: $(HDR1) 
cree0.o: $(HDR2)
ddird.o: $(HDR1) $(HDR2) $(HDR3)
ddiwrt.o: $(HDR1) $(HDR3) 
geomin.o: $(HDR1)
grid.o: $(HDR1)
radcoef.o: $(HDR1) $(HDR2)
radht.o: $(HDR1) $(HDR2) $(HDR3)
rdom0.o: $(HDR1) $(HDR2) $(HDR3)
rdomr.o: $(HDR1) $(HDR2) $(HDR3)
restrt.o: $(HDR1) $(HDR2) 
rordr.o: $(HDR3)
rqacc.o: $(HDR1) $(HDR2) $(HDR3)
rqciew.o: $(HDR1) $(HDR3)
rqcitb.o: $(HDR1) $(HDR3)
rqiew.o: $(HDR1) $(HDR3)
rqins.o: $(HDR1) $(HDR3)
rqitb.o: $(HDR1) $(HDR3)
rrslt.o: $(HDR1) $(HDR2) $(HDR3)
rxibc.o: $(HDR1) $(HDR2) $(HDR3)
ryibc.o: $(HDR1) $(HDR2) $(HDR3)
rzibc.o: $(HDR1) $(HDR2) $(HDR3)
setup.o: $(HDR1) $(HDR2) 
wallpr.o: $(HDR1) $(HDR2) 

###
