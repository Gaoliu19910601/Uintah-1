<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE component SYSTEM "component.dtd">
<?xml-stylesheet href="component.xsl" type="text/xsl"?>
<?cocoon-process type="xslt"?>

<!--
   For more information, please see: http://software.sci.utah.edu

   The MIT License

   Copyright (c) 2004 Scientific Computing and Imaging Institute,
   University of Utah.

   
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
-->

<component name="StreamMatrixFromDisk" category="DataIO" optional="false">
  <overview>
    <authors>
      <author>Jeroen Stinstra</author>
    </authors>
    <summary>
      Stream Data from a file on disk without loading the data into memory.
    </summary>
    <description>
      <p>      
      Stream Data from a file on disk without loading the data into memory.
      This module extracts a one or more vectors from a matrix stored on disk.
      There are three methods of determining which columns or rows need to be
      extracted:
      </p>
      <p>
      (1) One can use the movie buttons in the GUI to set a start and end index
      and as well the current index. One can automatically step through the 
      different vectors using the buttons in the GUI. The GUI also allows for 
      setting the timing of reloading a new vector. This way one can select only
      one vector at a time.
      </p>
      <p>
      (2) One can supply a matrix with the indices of the vectors to extract. This
      can be one index or can be multiple. The matrix with the indices need to be
      connected to the 'Indices' input port. The order of the indices is kept when
      assigning them in the output matrix.
      </p>
      <p>
      (3) One can supply weights that can are used to extract columns or rows and then
      sum them together using the assigned weights. When using the weights, one does not
      need to supply indices. The indices of the rows or columns to be retrieved from 
      disk are the columns in the weights matrix with a weight assigned. To obtain multple
      weighted outputs, one can assign a weights matrix with multiple rows. Internally
      in the module, the weights matrix will be translated into a sparse matrix. For
      optimal performance one should input a sparse matrix. This option is intended for
      mapping matrices, where one slices a small piece of a large mesh and wants to 
      extract the signals assigned to that part of the mesh.
      </p>
      <p>
      The module outputs the vector or matrix with the selected columns or rows. The module
      also outputs the selected indices. This port can be used to slave other StreamMatrixFromDisk
      modules to read the same indexed data from different data files. The module also
      output the scaled index, which is the index multiplied with the spacing information
      stored in the data file. This port can be used to extract the time from the file
      automatically.
      </p>
      <p>
      The file with the streaming data needs to be in the uncompressed NRRD format. This
      format uses a text file to describe a data set distributed over multiple files.
      See teem.sourceforge.net for a description of the NRRD file format.
      </p>
    </description>
  </overview>
  <io>
    <inputs lastportdynamic="no">
      <port>
        <name>Indices</name>
        <datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>Weights</name>
        <datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>Filename</name>
        <datatype>SCIRun::String</datatype>
      </port>
    </inputs>
    <outputs>
      <port>
        <name>DataVector</name>
        <datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>Index</name>
        <datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>Scaled Index</name>
        <datatype>SCIRun::Matrix</datatype>
      </port>
      <port>
        <name>Filename</name>
        <datatype>SCIRun::String</datatype>
      </port>
    </outputs>
  </io>
</component>
