/*
   For more information, please see: http://software.sci.utah.edu

   The MIT License

   Copyright (c) 2007 Scientific Computing and Imaging Institute,
   University of Utah.

   License for the specific language governing rights and limitations under
   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
   THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
*/
require gov.cca version 0.8.1;
require sci.cca version 0.2.1;

package scijump version 0.2.1 {
  class SCIJumpFramework implements-all sci.cca.AbstractFramework {}

  class Services implements-all gov.cca.Services {
    opaque getData();
  }

  class ComponentClassDescription implements-all sci.cca.ComponentClassDescription {}

  //class Component implements-all gov.cca.Component {}

  //class Port implements-all gov.cca.Port {}

  class TypeMap implements-all gov.cca.TypeMap {
    // use to set internal SCI::TypeMap data for now
    //void setInternalData(in opaque data);
    //opaque getInternalData();
  }

  class ComponentID implements-all gov.cca.ComponentID {}

  class CCAException implements-all gov.cca.CCAException {}

  class BuilderService implements-all sci.cca.ports.BuilderService {}

  // EventService classes

  class Topic implements-all sci.cca.Topic {}
  class Subscription implements-all sci.cca.Subscription {}
  class Event implements-all sci.cca.Event {
    void setHeader(in gov.cca.TypeMap h);
    void setBody(in gov.cca.TypeMap b);
  }
  class EventListener implements-all sci.cca.EventListener {}
  class PublisherEventService implements-all sci.cca.ports.PublisherEventService {}
  class SubscriberEventService implements-all sci.cca.ports.SubscriberEventService {}

  // EventService classes

  package ui {
    class GUIBuilder implements-all sci.cca.ui.Builder, sci.cca.EventListener {
      // manage UI ports for the GUI
      // note: no UI handling for TxtBuilder
      bool connectUIPort(in string usesName,
                                     in string providesPortName,
                                     in gov.cca.ComponentID cid,
                                     out string usesPortName);
      void disconnectUIPort(in string uiPortName);
      int ui(in string uiPortName);

      void updateProgress(in gov.cca.ComponentID cid, in int progressPercent);
      void updateComponentModels();

      /*  manage Progress ports for the GUI */
      //   bool connectProgress(in string providesName, in string usesPortName, in gov.cca.ComponentID cid, out string providesPortName);
      //   void disconnectProgress(in string progressPortName);

      // manage ComponentIcon ports for the GUI
      bool connectComponentIconUI(in string usesName,
                                                        in string providesPortName,
                                                        in gov.cca.ComponentID cid,
                                                        out string usesPortName);
      void disconnectComponentIconUI(in string ciPortName);

      bool setPortColor(in string portName, in string colorName);
      // see Bugzilla bug #2834:
      //bool setPortColor(in string portName, in opaque color);
      // opaque type is wxColor*
      opaque getPortColor(in string portName);
    }
  } // package ui
} // package scijump
