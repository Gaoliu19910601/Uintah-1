/*
 * This file was automatically generated by SCC - do NOT edit!
 * You should edit ThreadAlert.scc instead 
 */

#ifndef SCI_THREAD_THREADALERT_H
#define SCI_THREAD_THREADALERT_H 1

/*
 * When a thread is alerted (see <b>Thread</b>), it throws
 * a <b>ThreadAlert</b> exception.  This event is typically
 * triggered asynchonously by another thread, and can therefore
 * happen at any time.  Threads should catch this exception,
 * perform any cleanup operations and rethrow the exception.
 */


/**************************************
 
CLASS
   ThreadAlert
   
KEYWORDS
   ThreadAlert
   
DESCRIPTION
   
   When a thread is alerted (see <b>Thread</b>), it throws
   a <b>ThreadAlert</b> exception.  This event is typically
   triggered asynchonously by another thread, and can therefore
   happen at any time.  Threads should catch this exception,
   perform any cleanup operations and rethrow the exception.
 
PATTERNS


WARNING
   
****************************************/

class ThreadAlert {
    friend class Thread;
    //////////
    //<i>No documentation provided</i>
    ThreadAlert(int code);

    //////////
    //<i>No documentation provided</i>
    ~ThreadAlert();
public:
    //////////
    //Returns the alert code which was passed into alert by the thread issuing the alert.
    int alertCode() ;
};

#endif









